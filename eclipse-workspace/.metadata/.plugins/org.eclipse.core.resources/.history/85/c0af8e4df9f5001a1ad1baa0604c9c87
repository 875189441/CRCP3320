import java.util.ArrayList;

public class ProbabilityGenerator<T> {
	int n = 0;
	float sum = 0;
	int value;
	float prob;

	ArrayList<T> alphabet;
	ArrayList<Integer> alphabet_counts;

	ProbabilityGenerator() {

		alphabet = new ArrayList<T>();
		alphabet_counts = new ArrayList<Integer>();

	}

	void train(ArrayList<T> newTokens) {
		// train

		for (int i = 0; i < newTokens.size(); i++) {
			T token = newTokens.get(i);
			int index = alphabet.indexOf(token);

			if (index == -1) {
				index = alphabet.size();
				alphabet.add(newTokens.get(i));
				alphabet_counts.add(0);// should be 1f

			}

				value = alphabet_counts.get(index);
				value++;
				alphabet_counts.set(index, value);

			

		}

		sum += newTokens.size();
		System.out.println(sum);
		System.out.println(newTokens);
		for (int j = 0; j < alphabet.size(); j++) {

			prob = (alphabet_counts.get(j) / sum);
			System.out.println(prob);
			System.out.println(alphabet.get(j));
			
		}

	}

	

}